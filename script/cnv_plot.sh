conda activate gatk
gatk=/path/to/gatk-4.5.0.0/gatk
for i in `ls *genotyped-segments.vcf.gz`;
do 
	sampleName=$(zcat $i | grep -v '##' | head -n1 | cut -f10)
	$gatk VariantsToTable -V ${i} -F CHROM -F POS -F END -GF NP -GF CN -verbosity ERROR -O seg/${i}.table.txt
	awk -v sampleName=$sampleName 'BEGIN {FS=OFS="\t"} {print sampleName, $0}' seg/${i}.table.txt >seg/${i}.seg
	#head ${i}.seg;
done

vcf2circos -i cnv_gvcf_clustered.vcf.gz \
	-a hg19 \
	-o test_vcf2circos.html \
	-p /storage/zhenghoufengLab/chenxiang/toolkit/vcf2circos/Static/options.json


#PlotCNV
# zcat cnv_gvcf_clustered.vcf.gz | awk '/^#CHROM/{split($0,b,"\t");};!/^#/{split($3,a,"_");OFS="\t";for(i=10;i<=NF;i++){if($i~/\.\/\./){print "chr"a[2],b[i],a[3],a[4],"Gain"};if($i~/0\/1/){print "chr"a[2],b[i],a[3],a[4],"Loss"};if($i~/1\/1/){print "chr"a[2],b[i],a[3],a[4],"CN-LOH"}}}' >cnv_gvcf_clustered.tsv
CNV <- read.csv("/path/to/cnv_gvcf_clustered.tsv",sep="\t",header=F)
colnames(CNV)<-c("chr","sampleID", "start.pos", "end.pos", "calls")
CNV <- prepareCNV(CNV, chr="chr", sampleID="sampleID", start.pos="start.pos", end.pos="end.pos", calls="calls")
CNV <- orderCNV(CNV)
CNV <- setPositionsCNV(CNV, genome="hg19", StartChrom="chr20",FinalChrom="chr20")
CNV <- plotCopynumber(CNV, setColours = c("Gain"="#F8766D", "Loss"="#619CFF"))
CNV@Plot$plot
ggsave("TestPlot.png", width=10, height=3)

#IGV
sampleName=$(zcat cnv_gvcf_clustered.vcf.gz | grep -v '##' | head -n1 | cut -f10)
$gatk VariantsToTable -V cnv_gvcf_clustered.vcf.gz -F CHROM -F POS -F END -GF NP -GF CN -verbosity ERROR -O cnv_gvcf_clustered.table.txt
awk -v sampleName=$sampleName 'BEGIN {FS=OFS="\t"} {print sampleName, $0}' cnv_gvcf_clustered.table.txt >cnv_gvcf_clustered.seg

#zcat cnv_gvcf_clustered.vcf.gz | awk '/^#CHROM/{split($0,b,"\t");};!/^#/{split($3,a,"_");OFS="\t";for(i=10;i<=NF;i++){split($i,c,":");print b[i],a[2],a[3],a[4],c[2]}}' >cnv_gvcf_clustered_handycnv.tsv

library(knitr)
library(HandyCNV)
CNV <- read.csv("/path/to/cnv_gvcf_clustered_handycnv.tsv",sep="\t",header=FALSE)
colnames(CNV) <- c("Sample_ID","Chr","Start","End","CNV_Value")
#CNV <- kable(CNV)
cnv_standard <- cnv_clean(standard_cnv=CNV, drop_length = 5, folder = "cnv_clean")
cnv_visual(clean_cnv=cnv_standard,chr_id=20,width_1=20,height_1=12,folder="cnv_visual")
cnv_visual(clean_cnv=cnv_standard,start_position = 41,end_position = 43,chr_id=20,width_1=20,height_1=12,folder="cnv_visual")
#plot CNVs in a region of interest
cnv_visual(clean_cnv=cnv_standard,chr_id=20,width_1=20,height_1=12,folder="cnv_visual")
#plot CNVs in a sample of interest
cnv_visual(clean_cnv = cnv_standard,individual_id = "HG00383", width_1 = 20, height_1 = 13, folder = "cnv_visual")
#plot an interesting gene 
#human_gene <- get_refgene(gene_version = "Human_hg19") # Human_hg38
call_cnvr(cnv_standard, chr_set = 20, folder = "cnvr")
call_gene(refgene = "refgene/Human_hg19.txt", interval = "cnvr/cnvr.txt",clean_cnv = cnv_standard,folder = "call_gene")
cnv_visual(clean_cnv="call_gene/cnv_annotation.txt",target_gene = "BPIFA3",width_1=20,height_1=12,folder="cnv_visual")

#present annotated genes above the CNV plot
cnv_visual(clean_cnv=cnv_standard,refgene = "refgene/Human_hg19.txt", chr_id=20, start_position = 31,end_position = 32,col_gene = "red",width_1=20,height_1=12,folder="cnv_visual")

#summary plots
cnv_standard_4 <- cnv_standard[cnv_standard$CNV_Value<5,]
cnv_summary_plot(clean_cnv = cnv_standard_4, #standard file was generated by 'cnv_clean' function in section 1
                 length_group = c(0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 1, 2, 5), # optional, set group of vectors to divide CNV length, unit is Mb. such as vector of ‘c(0.05, 0.3, 1)’, means divide the CNV length into four group: '<0.05Mb', '0.05 - 0.3Mb', '0.3-1Mb' and '>1Mb', maximum can accept 11 valueses
                 col_0 = "red", #optional, customize color for o copy CNV 
                 col_1 = "black", #optional, customize color for o copy CNV 
                 col_3 = "purple", #optional, customize color for o copy CNV 
                 col_4 = "blue", #optional, customize color for o copy CNV 
                 plot_sum_1 = TRUE,  #optional, make sum combination plot 1
                 height_sum1 = 26, #optional, adjust the size of sum plot 1
                 width_sum1 = 20, #optional, adjust the size of sum plot 1
                 plot_sum_2 = TRUE, #optional, make sum combination plot 2
                 height_sum2 = 20, #optional, adjust the size of sum plot 2
                 width_sum2 = 27, #optional, adjust the size of sum plot 2
                 folder = "cnv_summary_plot")

#plot CNVR distribution map
cnvr_plot(cnvr = "cnvr/cnvr.txt", #standard file was generated by 'call_cnvr' function in section 4
          assembly = "Human", #cattle could select 'UMD' or 'ARS', other species could assign the name of species
          loss_col = "green2", #optional, adjust the color of Loss type of CNVR
          gain_col = "red", #optional, adjust the color of Gain type of CNVR
          mixed_col = "black",  #optional, adjust the color of Mixed type of CNVR
          legend_x = 127, #optional, adjust the horizontal position of legend
          legend_y = 30,  #optional, adjust the vertical position of legend
          #height_1 = 14, #optional, adjust the height of CNVR plot
          #width_1 = 10, #optional, adjust the width of CNVR plot
          folder = "cnvr_plot")

#plot all high frequency CNVRs at once
cnvr_plot(cnvr = "cnvr/cnvr.txt", #standard file was generated by 'call_cnvr' function in section 4
          clean_cnv = cnv_standard, #standard file was generated by 'cnv_clean' function in section 1
          refgene = "refgene/Human_hg19.txt", #standard file was generated by 'get_refgene' function in section 5.1
          sample_size = 379, #total sample size
          common_cnv_threshold = 0.58, #the CNV frequency threshold
          width_1 = 10, #optional, adjust the width of final plot
          height_1 = 10, #optional, adjust the height of final plot
          col_gene = "blue", #optional, adjust the colour of annotated genes
          gene_font_size = 2.5, #optional, adjust the font size of annotated gene names
          folder = "cnvr_plot")

# Online CNV visualization by SegmentModel Spy
awk -F"\t" 'BEGIN{print "CONTIG\tSTART\tEND\tLOG2_COPY_RATIO"}!/@|CONTIG/{$NF=log($NF)/log(2);print $0}' *.denoised-copy-ratios.vcf.gz >*.denoised-copy-ratios.tsv